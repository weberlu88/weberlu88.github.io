[{"content":" 👦: 才接觸 hugo 三天就來東改西改484搞錯了什麼。\n👧: 要不要先去看個 YouTube 教學搞懂一下檔案結構和編譯方式呀?\n👦: 有道理\u0026hellip; 但是我拒絕.jpg !\n 修改前後比對 \r預設的圖標是單色的\r \r修改後變得繽紛許多\r\nIcon 的存放目錄 依照此模板官網的說法，預設的 SVG icon 放在 theme 目錄底下，即為 themes/hugo-theme-stack/assets/icons 目錄，為了方便起見我將我自己下載的 icon 資料夾放在同一個目錄中。其實你也可以放在 hugo 專案的 /assets/icons 底下。\n在設定檔中，圖檔名稱是可以包含路徑的，而網站在編譯時會自行加上副檔名:\n 預設: iconname 自定義: subfolder/iconname  修改左側 Sidebar 上的圖示 首頁圖示 參照作者的文件: https://docs.stack.jimmycai.com/configuration/custom-menu.html。\n左側的 Sidebar 又稱菜單或 Menu，可以從(1) config.yaml 檔中設定，或是從(2) /content/page 底下 md 檔的標頭(Markdown Front Matter)設定。首頁圖示以及其他項目只能從 config 檔中設定，格式為:\nmenu:main:- identifier:homename:首頁url:/weight:-100pre:blog-lineal/homeparams:### For demonstration purpose, the home link will be open in a new tabnewTab:false identifier: Item ID (指該 menu item 對應到哪個檔案??) name: Display text (左側選單上 menu item 的文字) url: Link (該頁面的路由) weight: Priority of the item, lower value means higher priority. (排序，數值越小越上面) pre: Specify which SVG icon should be used (圖示)  像是我將 pre 改設為 blog-lineal/home, theme 就會自動抓取 assets/icons 目錄底下的 blog-lineal/home.svg。\n其他 Page 的圖示 其他 menu item 裡的頁面，模板預設寫在 /content/page 的 md 檔中，以我的\u0026quot;文章庫\u0026quot;為例，一樣將 pre field 改成我的 svg 圖片檔名。當然你想要把 menu: 這部分挪到 config 檔裡統一設定也 OK。\n---title:\u0026#34;文章庫\u0026#34;date:2019-05-28layout:\u0026#34;archives\u0026#34;# 哪種頁面樣板slug:\u0026#34;archives\u0026#34;# 路由menu:main:weight:-70pre:blog-lineal/folder# icon---修改頭像 順帶一提，大頭貼、副標題和網站名稱都可以在 config 中編輯。\nsidebar:emoji:🇹🇼subtitle:Noslave to the ordinary. Your legacy is yours to make.avatar:enabled:truelocal:truesrc:img/avatar_cap_and_gown.jpg修改文章發表日期、閱讀時間的圖示  做下去才發現這個超難搞 \u0026gt;\u0026lt;\n個人化修改可以參考: https://docs.stack.jimmycai.com/modify-theme/\n 剛剛修改左側 Sidebar 時已經確認在整個 config.yaml 中 pre field 只存在 Custom menu 的設定值裡，設定檔沒有其他地方使用 pre field 來指定日期時間小圖示的檔名。在 /page 的 FrontMatter 表頭裡也沒有這兩個圖示的賦值語法。恩\u0026hellip;這下尷尬了，不知道它藏在哪裡。\n由於官方文件對於 Date format 沒有多做描述，我們在 theme-stack 專案的 feat(article): reading time #204 這個 pull request 中看到文章發表日期的圖示是 date.svg，以及閱讀書間的圖示是 time.svg (由下文推敲出次圖示於後來的版本被改成 clock.svg)。\n但還有一件事我們可以確定，就是這兩個 icon 的賦值一定存在專案的某個檔案片段，可能寫死在 theme 的 md 或是 html 裡面不讓使用者自訂義。所以還可以遍歷專案尋找哪裡有 date 或 time 字串。於是我打開 cmd 切到專案目錄下並輸入:\n$ grep -r \u0026#34;date\u0026#34; . \u0026#39;grep\u0026#39; 不是內部或外部命令、可執行的程式或批次檔。 蝦? 原來 windows 作業系統沒有 grep 指令，還好有雷同的 findstr 指令，記得將結果輸出到 out.txt 不然直接 print 在 cmd 上往往會因字體編碼出錯。來試試:\n$ findstr /si date *.* \u0026gt;\u0026gt; out.txt 打開 out.txt，看到 \u0026ldquo;helper/icon\u0026rdquo; \u0026ldquo;date\u0026rdquo; 這些關鍵字。\n268 269 270 271 272 273  themes\\hugo-theme-stack\\i18n\\zh-CN.yaml: lastUpdatedOn: themes\\hugo-theme-stack\\layouts\\page\\search.json: {{- $data := dict \u0026#34;title\u0026#34; .Title \u0026#34;date\u0026#34; .Date \u0026#34;permalink\u0026#34; .Permalink \u0026#34;content\u0026#34; (.Plain) -}} themes\\hugo-theme-stack\\layouts\\partials\\article\\components\\details.html: {{ if or (not .Date.IsZero) (.Site.Params.article.readingTime) }} themes\\hugo-theme-stack\\layouts\\partials\\article\\components\\details.html: {{ if not .Date.IsZero }} themes\\hugo-theme-stack\\layouts\\partials\\article\\components\\details.html: {{ partial \u0026#34;helper/icon\u0026#34; \u0026#34;date\u0026#34; }} themes\\hugo-theme-stack\\layouts\\partials\\article\\components\\details.html: {{- .Date.Format (or .Site.Params.dateFormat.published \u0026#34;Jan 02, 2006\u0026#34;) -}}   接著把 themes\\hugo-theme-stack\\layouts\\partials\\article\\components\\details.html 翻出來看看，哇! bingo! 就是這個檔案指定了日期時間的小圖示。看來他是寫死在這個 component 裡面所以就只能修改這個 html 了。\n注意! 因為是修改 theme 的預設樣式，所以我們的 svg 圖檔資源要放在 themes\\hugo-theme-stack\\assets\\icon 裡，理當不能放在自己的 hugo 專案裡，如果你自己放了一包圖檔在資料夾中，圖檔名稱是可以包含路徑 e.g. blog-linear/hourglass.svg。\n( Windows 的 dir 是 \\ 反斜線，故意跟其他作業系統/程式語言不一樣。這裡 html 中的路徑須為 / 斜線 )\n24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44  {{ if or (not .Date.IsZero) (.Site.Params.article.readingTime) }} \u0026lt;footer class=\u0026#34;article-time\u0026#34;\u0026gt; {{ if not .Date.IsZero }} \u0026lt;div\u0026gt; {{ partial \u0026#34;helper/icon\u0026#34; \u0026#34;date\u0026#34; }}  \u0026lt;time class=\u0026#34;article-time--published\u0026#34;\u0026gt; {{- .Date.Format (or .Site.Params.dateFormat.published \u0026#34;Jan 02, 2006\u0026#34;) -}} \u0026lt;/time\u0026gt; \u0026lt;/div\u0026gt; {{ end }} {{ if .Site.Params.article.readingTime }} \u0026lt;div\u0026gt; {{ partial \u0026#34;helper/icon\u0026#34; \u0026#34;clock\u0026#34; }}  \u0026lt;time class=\u0026#34;article-time--reading\u0026#34;\u0026gt; {{ T \u0026#34;article.readingTime\u0026#34; .ReadingTime }} \u0026lt;/time\u0026gt; \u0026lt;/div\u0026gt; {{ end }} \u0026lt;/footer\u0026gt; {{ end }}   小結 一路 trace code 改下來真的很花時間，如果是修改一般的網頁模板的圖示應該會比較輕鬆(不論是純JS或是三大框架)，只要對專案 CTRL+F 就可以找到哪裡引用了圖示資源再改掉他就好，哪像 hugo 這麼抽象化。\n這個案例凸顯 Hugo 為了增加可擴充性，必須犧牲掉部分的可讀性，尤其是針對無法擴充的部分，所以在開發時設想哪些功能未來會被擴充很重要阿，後期增加的 features 要顧慮到這點也就更難了。正是 OOP open–closed principle 的寫照:\n\u0026ldquo;Software entities should be open for extension, but closed for modification.\u0026rdquo; - Robert C. Martin\u0026rsquo;s 1996\n","date":"2021-09-17T00:00:00Z","image":"https://weberlu88.github.io/p/hugo-tutorial-icon/img-hugo-logo_hucd358bea0277494dc1176617efda6bee_12848_120x120_fill_box_smart1_3.png","permalink":"https://weberlu88.github.io/p/hugo-tutorial-icon/","title":"Hugo tutorial - 自訂義主題的 SVG Icon"},{"content":"Kail linux 官網提供了很詳細的安裝教學文件，我們可以從virtualbox 的設定中看到我們開啟了 Shared Clipboard 功能。倘若你實際上卻無法與 host 主機共用剪貼簿，那就恭喜跟我一樣碰到 virtualbox 的老問題了。\n 也有可能是 Kail linux ISO 的問題，因為我同台 host 也裝了 ubuntu、centOS 的 vm 卻沒有此狀況。\n \r開啟雙通道\r \r有裝GuestAddition\r\n正文開始  可參考英文論壇的解法 https://askubuntu.com/questions/22743/how-do-i-install-guest-additions-in-a-virtualbox-vm 或是中文翻譯版 https://ubuntuqa.com/zh-tw/article/66.html 或 https://www.jinnsblog.com/2021/05/virtualbox-guest-additions-install-guide.html。\n 因為我們已經在 virtualbox 的設定中加入了 GuestAddition.iso，因此可以在 vm 的桌面看到一個光碟機。點開來看裡面有 auturun 的執行檔，但是看起來就是沒有 work，需要手動安裝。如果你沒有在 virtualbox 設定中加入 GuestAddition.iso，須執行這項:\nsudo apt-get update\rsudo apt-get install virtualbox-guest-additions-iso \r我們的目標是掛載光碟並執行 VBoxLinuxAdditions.run\r\n其他版本的 Linux 也許可以從檔案管理員執行 VBoxLinuxAdditions.run 這個 shellscript。但 kali 不行，首先我們要掛載這個映像檔然後執行它:\nsudo mount /dev/cdrom /mnt # or any other mountpoint\rcd /mnt\rsudo sh ./VBoxLinuxAdditions.run\rreboot 雖然我在執行的時候噴 kernal header not found，但重開機後還是成功可共用剪貼簿了。\n\rps: debian 的 header 是 linux-headers-amd64，即是更新了這個錯誤訊息也一樣\r\n","date":"2021-09-14T00:00:00Z","permalink":"https://weberlu88.github.io/p/virtualbox-clipboard/","title":"VirtualBox 無法共用剪貼簿的萬年老 Bug"},{"content":" 這篇文章將會教你如何用 hugo 的模板建立靜態網站，並且部屬到 github page 上作為你的個人網站。\n Hugo 是什麼 \u0026ldquo;Hugo is a fast and modern static site generator written in Go, and designed to make website creation fun again.\u0026quot; by 官網\n優點:\n 懶人 - Hugo 是一個靜態網頁生成器，使用者不需要對 html、css、js 進行任何操作，不怕套了精美的模板卻改不動。 簡潔 - 使用markdown格式撰寫文章，資源讀取簡單，而且開發時可以 life-reload 頁面。 漂亮 - 有各式各樣的模板供你選擇。  實用連結:\n Hugo - Static Site Generator | Tutorial Hugo手把手安裝教學 Hugo 主题 Stack  Hugo 開發環境安裝 官網教學👉 https://gohugo.io/getting-started/installing/。\n要使用 hugo 來開發不需要安裝 go 只需要安裝 hugo 即可，在 windows 環境下需要用 scoop、choco 在 cmd 中安裝；如果沒有這兩個套件管理工具或不想打指令，也可以從官方 github release 下載 zip 檔，有些模板會用到 extended 版，最後記得將 hugo.exe 的 bin 目錄添加到環境變數中。詳細操作可以參考上方實用連結的YT頻道。\n建立你的網站 Hugo 使用 CLI(command line interface) 進行網站的本地部屬和打包等功能，常見的指令有\n hugo new site \u0026lt;directory-name\u0026gt;: 在指定目錄建立新的專案。 hugo server: 在本機(localhost)部屬網站，可以 hot-update 讓你一邊編輯一邊查看成果。 hugo: 根據目錄中的 config file 打包(build)專案，打包好的專案會寫入 /docs 目錄，記得每次打包前要先刪除舊的 /docs 唷，因為這個指令只會覆寫檔案，如果你刪除了一個頁面 hugo 不會幫你在 /docs 中刪除他。  每個指令都可以帶相關參數，有關更多指令和參數可參考官網👉https://gohugo.io/commands/。\n建議使用 VScode、Autm、Sublime 等程式編輯器來開啟專案，這類 ide 都有內建終端機好讓你下 CLI 指令。\n套用模板 Hugo 的社群提供了各式各樣的模板👉https://themes.gohugo.io/。\nHugo 模板允許大量的客製化，網站的樣式、架構、config 配置取決於模板的設計。挑模板除了考慮美觀，也建議挑個有操作手冊的以便日後的更改和維護。\n比如說這個網站的模板 hugo-theme-stack 就有附上 github repo 和中英文文檔，我在更改左右側選單、自訂義css上方便許多。\n編輯 在 hugo 專案上編輯網頁內容時再簡單不過了，hugo 使用 markdown 文件來記錄網站內容，文章內容放在 /content 目錄中，假如說我今天要建立一個新的頁面，則可在 /content/post 中新增一個資料夾，檔案格式為: /02-hugo-tutorial (頁面資料夾) |-- index.md (文章內容) |-- img-01.png (index.md 引用的本地資源) |-- img-02.png (index.md 引用的本地資源)\nGithub Page 創建及部屬  官方文件 👉https://docs.github.com/en/pages/getting-started-with-github-pages/about-github-pages\n Github 為使用者提供了靜態網站的 hosting service，分成 project site, user site 和 organization site 幾種網頁，每個 repository 可以建一個 project site，每個帳號可以 host 一個 user site。\n user site 的 repo 名稱要取的跟你的username相同，也是你的網域名稱(domain): \u0026lt;username\u0026gt;.github.io。 user site 的網站連結: http(s)://\u0026lt;username\u0026gt;.github.io。  建立好對應的 github repo 後再至 setting \u0026gt; pages 開啟網站。這個頁面可以選擇要從 repo 的哪個分支/哪個資料夾部屬網站。\n 預設 main branch: 就是以前的 master。 root folder: 部屬整個 repo。repo 須放 hugo 專案的 public 資料夾。這種配置可將 source code 和 deployed site 獨立分開來，兩個各一個 repo。 docs folder: 部屬 repo 中的 /docs。懶人方法是把整個 hugo 專案放在 repo 中，每次 build 好時把 /public 改名就可以 commit 了。  最後，我們要修改 hugo 專案的 config 檔，指定專案的網址為 baseurl: https://\u0026lt;username\u0026gt;.github.io/，不然無法載入 js、css、img 等資源喔。\n","date":"2021-09-13T00:00:00Z","image":"https://weberlu88.github.io/p/hugo-tutorial/img-hugo-logo_hucd358bea0277494dc1176617efda6bee_12848_120x120_fill_box_smart1_3.png","permalink":"https://weberlu88.github.io/p/hugo-tutorial/","title":"Hugo tutorial"},{"content":"本來想說江湖版的文公開發布不太好，但是這篇文就當作部落格的第一篇文吧，若有不適再下架xd\n我覺得我們資管系和中央其他系不同的地方就是。資管的大家都在為自己的人生認真，生活步調像是閃爍霓虹的快，一切就是為了未來更好的條件與發展。但是，百忙之中，卻有人願意停下來關心你一下。\n從小到大的求學階段，我看過天賦異稟卻沒那麼努力的人；或者是努力付出了許多，卻不一定得到那麼多的人。不過呢，你在中央資管的大家庭，你就不是一個人單打獨鬥，學長姐、同儕間願意分享經歷、分享資源，是我最感謝、最珍惜的事情。祝福中央資管的各位未來順利、幸福、愉快。\n 前言 《資工所 vs 資管所 怎麼選??》 正篇 《推甄經驗分享》  ","date":"2021-07-23T00:00:00Z","image":"https://weberlu88.github.io/p/graduate-apply/matt-le-SJSpo9hQf7s-unsplash_hu958d513eeefe5556a31d065479ecc5ac_14205_120x120_fill_q75_box_smart1.jpg","permalink":"https://weberlu88.github.io/p/graduate-apply/","title":"【110】【台大資管/交大資管/成大資管/中央資管/交大資工/清大資工/成大資工】【推甄心得】"}]